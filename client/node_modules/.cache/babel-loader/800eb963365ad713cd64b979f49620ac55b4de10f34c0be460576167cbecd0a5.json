{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\GitHub\\\\Project_-To_Do_List\\\\client\\\\src\\\\components\\\\List.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from 'react';\nimport EditTodo from './Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListTodo = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const deleteTodo = async id => {\n    try {\n      const deleteTodo = await fetch(`http://localhost:5050/todos/${id}`, {\n        method: 'DELETE'\n      });\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getTodos = async () => {\n    try {\n      const response = await fetch('http://localhost:5050/todos/');\n      const jsonData = await response.json();\n      setTodos(jsonData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleCheckboxChange = id => {\n    // Crie uma cópia dos todos e encontre o todo com o ID correspondente\n    const updatedTodos = [...todos];\n    const todoToUpdate = updatedTodos.find(todo => todo.todo_id === id);\n\n    // Inverta o estado 'completed' do todo selecionado\n    todoToUpdate.completed = !todoToUpdate.completed;\n\n    // Atualize o estado com a cópia atualizada dos todos\n    setTodos(updatedTodos);\n  };\n  useEffect(() => {\n    getTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Descri\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Deletar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `checkbox-${todo.todo_id}`,\n              checked: todo.completed,\n              onChange: () => handleCheckboxChange(todo.todo_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: todo.completed ? 'todo-description completed' : 'todo-description',\n            children: todo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(EditTodo, {\n              todos: todo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteTodo(todo.todo_id),\n              children: \"Deletar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, todo.todo_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ListTodo, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = ListTodo;\nexport default ListTodo;\nvar _c;\n$RefreshReg$(_c, \"ListTodo\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","EditTodo","jsxDEV","_jsxDEV","ListTodo","_s","todos","setTodos","deleteTodo","id","fetch","method","filter","todo","todo_id","error","console","log","getTodos","response","jsonData","json","handleCheckboxChange","updatedTodos","todoToUpdate","find","completed","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","type","checked","onChange","description","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/GitHub/Project_-To_Do_List/client/src/components/List.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport EditTodo from './Edit';\r\n\r\nconst ListTodo = () => {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const deleteTodo = async (id) => {\r\n    try {\r\n      const deleteTodo = await fetch(`http://localhost:5050/todos/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      setTodos(todos.filter((todo) => todo.todo_id !== id));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getTodos = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5050/todos/');\r\n      const jsonData = await response.json();\r\n\r\n      setTodos(jsonData);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (id) => {\r\n    // Crie uma cópia dos todos e encontre o todo com o ID correspondente\r\n    const updatedTodos = [...todos];\r\n    const todoToUpdate = updatedTodos.find((todo) => todo.todo_id === id);\r\n\r\n    // Inverta o estado 'completed' do todo selecionado\r\n    todoToUpdate.completed = !todoToUpdate.completed;\r\n\r\n    // Atualize o estado com a cópia atualizada dos todos\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <table className='table mt-5 text-center'>\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            <th>Descrição</th>\r\n            <th>Editar</th>\r\n            <th>Deletar</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n          todos.map((todo) => (\r\n            <tr key={todo.todo_id}>\r\n              <td>\r\n                <input\r\n                  type='checkbox'\r\n                  id={`checkbox-${todo.todo_id}`}\r\n                  checked={todo.completed}\r\n                  onChange={() => handleCheckboxChange(todo.todo_id)}\r\n                />\r\n              </td>\r\n              <td className={todo.completed ? 'todo-description completed' : 'todo-description'}>\r\n                {todo.description}\r\n              </td>\r\n              <td>\r\n                <EditTodo todos={todo} />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className='btn btn-danger'\r\n                  onClick={() => deleteTodo(todo.todo_id)}\r\n                >\r\n                  Deletar\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListTodo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}