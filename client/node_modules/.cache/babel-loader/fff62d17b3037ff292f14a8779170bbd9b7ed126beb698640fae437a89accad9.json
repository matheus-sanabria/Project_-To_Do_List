{"ast":null,"code":"var _jsxFileName = \"/home/cap/Documents/Project_-To_Do_List/client/src/components/Edit.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from \"react\";\n\n/**\n * Componente EditTodo:\n * Este componente permite a edição de um afazer (tarefa) por meio de um modal.\n * O modal exibe um formulário para editar a descrição do afazer.\n * As alterações são enviadas para o servidor ao serem salvas.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTodo = ({\n  todo\n}) => {\n  _s();\n  // Estado para armazenar a descrição atualizada do afazer\n  const [description, setDescription] = useState(todo.description);\n\n  // Função para atualizar a descrição do afazer\n  const updateDescription = async e => {\n    e.preventDefault();\n    try {\n      // Constrói o corpo da requisição com a nova descrição\n      const body = {\n        description\n      };\n\n      // Envia uma requisição PUT para atualizar a descrição no servidor\n      const response = await fetch(`http://localhost:5050/todos/${todo.todo_id}`, {\n        method: 'PUT',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n\n      // Redireciona para a página principal após a atualização\n      window.location = \"/\";\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning\",\n      \"data-bs-toggle\": \"modal\",\n      \"data-bs-target\": `#id${todo.todo_id}`,\n      children: \"Editar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      id: `id${todo.todo_id}`,\n      onClick: () => setDescription(todo.description),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Editar afazer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              \"data-bs-dismiss\": \"modal\",\n              onClick: () => setDescription(todo.description),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: description,\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success\",\n              \"data-bs-dismiss\": \"modal\",\n              onClick: e => updateDescription(e),\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger\",\n              \"data-bs-dismiss\": \"modal\",\n              onClick: () => setDescription(todo.description),\n              children: \"Fechar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(EditTodo, \"8+7bLWetC2qBum+Uv3xZAs90PS0=\");\n_c = EditTodo;\nexport default EditTodo;\nvar _c;\n$RefreshReg$(_c, \"EditTodo\");","map":{"version":3,"names":["React","Fragment","useState","jsxDEV","_jsxDEV","EditTodo","todo","_s","description","setDescription","updateDescription","e","preventDefault","body","response","fetch","todo_id","method","headers","JSON","stringify","window","location","error","console","log","children","type","className","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/cap/Documents/Project_-To_Do_List/client/src/components/Edit.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\n\n/**\n * Componente EditTodo:\n * Este componente permite a edição de um afazer (tarefa) por meio de um modal.\n * O modal exibe um formulário para editar a descrição do afazer.\n * As alterações são enviadas para o servidor ao serem salvas.\n */\nconst EditTodo = ({ todo }) => {\n    // Estado para armazenar a descrição atualizada do afazer\n    const [description, setDescription] = useState(todo.description);\n\n    // Função para atualizar a descrição do afazer\n    const updateDescription = async (e) => {\n        e.preventDefault();\n        try {\n            // Constrói o corpo da requisição com a nova descrição\n            const body = { description };\n\n            // Envia uma requisição PUT para atualizar a descrição no servidor\n            const response = await fetch(`http://localhost:5050/todos/${todo.todo_id}`, {\n                method: 'PUT',\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body),\n            });\n\n            // Redireciona para a página principal após a atualização\n            window.location = \"/\";\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    return (\n        <Fragment>\n            {/* Botão para abrir o modal de edição */}\n            <button\n                type=\"button\"\n                className=\"btn btn-warning\"\n                data-bs-toggle=\"modal\"\n                data-bs-target={`#id${todo.todo_id}`}\n            >\n                Editar\n            </button>\n\n            {/* Modal de edição */}\n            <div\n                className=\"modal\"\n                id={`id${todo.todo_id}`}\n                onClick={() => setDescription(todo.description)}\n            >\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h4>Editar afazer</h4>\n                            {/* Botão para fechar o modal */}\n                            <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-bs-dismiss=\"modal\"\n                                onClick={() => setDescription(todo.description)}\n                            >\n                                X\n                            </button>\n                        </div>\n\n                        <div className=\"modal-body\">\n                            {/* Campo de entrada para a nova descrição do afazer */}\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={description}\n                                onChange={(e) => setDescription(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"modal-footer\">\n                            {/* Botão para salvar as alterações */}\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-success\"\n                                data-bs-dismiss=\"modal\"\n                                onClick={(e) => updateDescription(e)}\n                            >\n                                Editar\n                            </button>\n                            {/* Botão para fechar o modal sem salvar alterações */}\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-danger\"\n                                data-bs-dismiss=\"modal\"\n                                onClick={() => setDescription(todo.description)}\n                            >\n                                Fechar\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default EditTodo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}