{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/codificadores-de-negocios/Apps e Sistemas/Project_-To_Do_List/client/src/components/List.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from 'react';\nimport EditTodo from './Edit';\n\n/**\n * Componente ListTodo:\n * Este componente exibe uma lista de afazeres e afazeres concluídos em duas tabelas separadas.\n * Permite a marcação de afazeres como completos, edição e exclusão de afazeres.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListTodo = () => {\n  _s();\n  // Estado para armazenar todos os afazeres não concluídos\n  const [todos, setTodos] = useState([]);\n  // Estado para armazenar todos os afazeres concluídos\n  const [completedTodos, setCompletedTodos] = useState([]);\n\n  // Função para deletar um afazer\n  const deleteTodo = async id => {\n    try {\n      var _todos$find;\n      // Chamada para excluir o afazer no servidor\n      const deleteTodo = await fetch(`http://localhost:5050/todos/${id}`, {\n        method: 'DELETE'\n      });\n\n      // Atualiza o estado removendo o afazer excluído\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n\n      // Verifica se o afazer excluído está na lista de completos e o remove\n      const isCompleted = (_todos$find = todos.find(todo => todo.todo_id === id)) === null || _todos$find === void 0 ? void 0 : _todos$find.completed;\n      if (isCompleted) {\n        setCompletedTodos(completedTodos.filter(todo => todo.todo_id !== id));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Função para obter todos os afazeres do servidor\n  const getTodos = async () => {\n    try {\n      // Chamada para obter a lista de afazeres do servidor\n      const response = await fetch('http://localhost:5050/todos/');\n      // Converte a resposta para formato JSON\n      const jsonData = await response.json();\n\n      // Separa os afazeres completos e não completos\n      const completed = jsonData.filter(todo => todo.completed);\n      const notCompleted = jsonData.filter(todo => !todo.completed);\n\n      // Atualiza os estados com os afazeres completos e não completos\n      setTodos(notCompleted);\n      setCompletedTodos(completed);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Função para lidar com a mudança do estado do checkbox\n  // Função para lidar com a mudança do estado do select\n  const handleSelectChange = async (id, selectedStatus) => {\n    try {\n      // Chamada para atualizar o status do afazer no servidor\n      const response = await fetch(`http://localhost:5050/todos/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          completed: selectedStatus === 'Feito'\n        })\n      });\n\n      // Atualiza o estado do afazer com o novo status\n      const updatedTodos = todos.map(todo => todo.todo_id === id ? {\n        ...todo,\n        completed: selectedStatus === 'Feito'\n      } : todo);\n\n      // Atualiza o estado dos afazeres\n      setTodos(updatedTodos);\n\n      // Atualiza a lista de completos se necessário\n      if (selectedStatus === 'Feito') {\n        setCompletedTodos([...completedTodos, updatedTodos.find(todo => todo.todo_id === id)]);\n      } else {\n        setCompletedTodos(completedTodos.filter(todo => todo.todo_id !== id));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Efeito de lado para obter os afazeres ao montar o componente\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  // Renderização do componente\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"List\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center mt-5\",\n          children: \"Afazeres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table mt-5 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 14\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Descri\\xE7\\xE3o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 14\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 14\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Deletar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: todos.map(todo => !todo.completed && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: todo.completed ? 'Feito' : 'À fazer',\n                  onChange: e => handleSelectChange(todo.todo_id, e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Feito\",\n                    children: \"Feito\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Em progresso\",\n                    children: \"Em progresso\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\\xC0 fazer\",\n                    children: \"\\xC0 fazer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: todo.completed ? 'todo-description completed' : 'todo-description',\n                children: todo.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(EditTodo, {\n                  todo: todo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: () => deleteTodo(todo.todo_id),\n                  children: \"Deletar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)]\n            }, todo.todo_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(ListTodo, \"uVDYPzoO1+gK9UJnSPGUjN7ywdM=\");\n_c = ListTodo;\nexport default ListTodo;\nvar _c;\n$RefreshReg$(_c, \"ListTodo\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","EditTodo","jsxDEV","_jsxDEV","ListTodo","_s","todos","setTodos","completedTodos","setCompletedTodos","deleteTodo","id","_todos$find","fetch","method","filter","todo","todo_id","isCompleted","find","completed","error","console","log","getTodos","response","jsonData","json","notCompleted","handleSelectChange","selectedStatus","headers","body","JSON","stringify","updatedTodos","map","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","description","onClick","_c","$RefreshReg$"],"sources":["/opt/lampp/htdocs/codificadores-de-negocios/Apps e Sistemas/Project_-To_Do_List/client/src/components/List.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport EditTodo from './Edit';\n\n/**\n * Componente ListTodo:\n * Este componente exibe uma lista de afazeres e afazeres concluídos em duas tabelas separadas.\n * Permite a marcação de afazeres como completos, edição e exclusão de afazeres.\n */\nconst ListTodo = () => {\n  // Estado para armazenar todos os afazeres não concluídos\n  const [todos, setTodos] = useState([]);\n  // Estado para armazenar todos os afazeres concluídos\n  const [completedTodos, setCompletedTodos] = useState([]);\n\n  // Função para deletar um afazer\n  const deleteTodo = async (id) => {\n    try {\n      // Chamada para excluir o afazer no servidor\n      const deleteTodo = await fetch(`http://localhost:5050/todos/${id}`, {\n        method: 'DELETE',\n      });\n\n      // Atualiza o estado removendo o afazer excluído\n      setTodos(todos.filter((todo) => todo.todo_id !== id));\n\n      // Verifica se o afazer excluído está na lista de completos e o remove\n      const isCompleted = todos.find((todo) => todo.todo_id === id)?.completed;\n      if (isCompleted) {\n        setCompletedTodos(completedTodos.filter((todo) => todo.todo_id !== id));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Função para obter todos os afazeres do servidor\n  const getTodos = async () => {\n    try {\n      // Chamada para obter a lista de afazeres do servidor\n      const response = await fetch('http://localhost:5050/todos/');\n      // Converte a resposta para formato JSON\n      const jsonData = await response.json();\n\n      // Separa os afazeres completos e não completos\n      const completed = jsonData.filter((todo) => todo.completed);\n      const notCompleted = jsonData.filter((todo) => !todo.completed);\n\n      // Atualiza os estados com os afazeres completos e não completos\n      setTodos(notCompleted);\n      setCompletedTodos(completed);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Função para lidar com a mudança do estado do checkbox\n // Função para lidar com a mudança do estado do select\nconst handleSelectChange = async (id, selectedStatus) => {\n  try {\n    // Chamada para atualizar o status do afazer no servidor\n    const response = await fetch(`http://localhost:5050/todos/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ completed: selectedStatus === 'Feito' }),\n    });\n\n    // Atualiza o estado do afazer com o novo status\n    const updatedTodos = todos.map((todo) =>\n      todo.todo_id === id ? { ...todo, completed: selectedStatus === 'Feito' } : todo\n    );\n\n    // Atualiza o estado dos afazeres\n    setTodos(updatedTodos);\n\n    // Atualiza a lista de completos se necessário\n    if (selectedStatus === 'Feito') {\n      setCompletedTodos([...completedTodos, updatedTodos.find((todo) => todo.todo_id === id)]);\n    } else {\n      setCompletedTodos(completedTodos.filter((todo) => todo.todo_id !== id));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n  // Efeito de lado para obter os afazeres ao montar o componente\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  // Renderização do componente\n  return (\n    <Fragment>\n      {/* Tabela de Afazeres */}\n      <div className='List'> \n\n    {/* Verifica se há afazeres não concluídos antes de renderizar a tabela */}\n       <div className='todo-list'>\n       <h3 className='text-center mt-5'>Afazeres</h3>\n     <table className='table mt-5 text-center'>\n         <thead>\n           <tr>\n             <th></th>\n             <th>Descrição</th>\n             <th>Editar</th>\n             <th>Deletar</th>\n           </tr>\n         </thead>\n         <tbody>\n            {/* Mapeia e renderiza afazeres não completos */}\n            {todos.map((todo) => (\n              !todo.completed && (\n                <tr key={todo.todo_id}>\n                  <td>\n                    {/* Campo select para escolher o status */}\n                    <select\n                      value={todo.completed ? 'Feito' : 'À fazer'}\n                      onChange={(e) => handleSelectChange(todo.todo_id, e.target.value)}\n                    >\n                      <option value=\"Feito\">Feito</option>\n                      <option value=\"Em progresso\">Em progresso</option>\n                      <option value=\"À fazer\">À fazer</option>\n                    </select>\n                  </td>\n                  {/* Descrição do afazer */}\n                  <td className={todo.completed ? 'todo-description completed' : 'todo-description'}>\n                    {todo.description}\n                  </td>\n                  {/* Componente para editar o afazer */}\n                  <td>\n                    <EditTodo todo={todo} />\n                  </td>\n                  {/* Botão para deletar o afazer */}\n                  <td>\n                    <button\n                      className='btn btn-danger'\n                      onClick={() => deleteTodo(todo.todo_id)}\n                    >\n                      Deletar\n                    </button>\n                  </td>\n                </tr>\n              )\n            ))}\n        </tbody>\n       </table>\n     </div>\n\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ListTodo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}