{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\GitHub\\\\Projeto_To-Do-List\\\\client\\\\src\\\\components\\\\List.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from 'react';\nimport EditTodo from './Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListTodo = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const deleteTodo = async id => {\n    try {\n      const deleteTodo = await fetch(\n      // utilizamos crase quando precisamos inserir um valor de script dentro da string\n      `http://localhost:5050/todos/${id}`, {\n        method: 'DELETE'\n      });\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getTodos = async () => {\n    try {\n      const response = await fetch('http://localhost:5050/todos/');\n      const jsonData = await response.json();\n      setTodos(jsonData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const [isChecked, setIsChecked] = useState(false);\n  const handleCheckboxChange = () => {\n    setIsChecked(!isChecked);\n  };\n  useEffect(() => {\n    getTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Descri\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Deletar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `checkbox-${todo.todo_id}`,\n              checked: isChecked // Use o estado 'completed' do item\n              ,\n              onChange: () => handleCheckboxChange(todo.todo_id) // Passe o ID do todo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"todo-description\",\n            htmlFor: `checkbox-${todo.todo_id}`,\n            style: isChecked ? {\n              textDecoration: 'line-through',\n              color: '#888'\n            } : {},\n            children: todo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(EditTodo, {\n              todo: todo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteTodo(todo.todo_id),\n              children: \"Deletar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, todo.todo_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(ListTodo, \"btZNySeMJEWI8CVEAfMzB0wScfo=\");\n_c = ListTodo;\nexport default ListTodo;\nvar _c;\n$RefreshReg$(_c, \"ListTodo\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","EditTodo","jsxDEV","_jsxDEV","ListTodo","_s","todos","setTodos","deleteTodo","id","fetch","method","filter","todo","todo_id","error","console","log","getTodos","response","jsonData","json","isChecked","setIsChecked","handleCheckboxChange","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","type","checked","onChange","htmlFor","style","textDecoration","color","description","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/GitHub/Projeto_To-Do-List/client/src/components/List.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport EditTodo from './Edit'\r\n\r\nconst ListTodo = () => {\r\n    const [todos, setTodos] = useState([])\r\n\r\n    const deleteTodo = async id => {\r\n        try {\r\n            const deleteTodo = await fetch(\r\n            // utilizamos crase quando precisamos inserir um valor de script dentro da string\r\n                `http://localhost:5050/todos/${id}`, \r\n                {\r\n                    method: 'DELETE'\r\n                }\r\n            ) \r\n\r\n            setTodos(todos.filter(todo => todo.todo_id !== id))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const getTodos = async () => {\r\n        try{\r\n            const response = await fetch('http://localhost:5050/todos/')\r\n            const jsonData = await response.json()\r\n\r\n            setTodos(jsonData)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    const handleCheckboxChange = () => {\r\n        setIsChecked(!isChecked);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTodos()\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <table className='table mt-5 text-center'>\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Descrição</th>\r\n                        <th>Editar</th>\r\n                        <th>Deletar</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {todos.map(todo => (\r\n                        <tr key={todo.todo_id}>\r\n                            <td>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    id={`checkbox-${todo.todo_id}`}\r\n                                    checked={isChecked} // Use o estado 'completed' do item\r\n                                    onChange={() => handleCheckboxChange(todo.todo_id)} // Passe o ID do todo\r\n                                />\r\n                            </td>\r\n                            <td className='todo-description'\r\n                                htmlFor={`checkbox-${todo.todo_id}`} style={isChecked ? \r\n                                { textDecoration: 'line-through', color: '#888' } : \r\n                                {}}>{todo.description}</td>\r\n                            <td>\r\n                                <EditTodo todo={todo} />\r\n                            </td>\r\n                            <td>\r\n                                <button \r\n                                className='btn btn-danger'\r\n                                onClick={() => deleteTodo(todo.todo_id)}\r\n                                >\r\n                                    Deletar\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListTodo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}